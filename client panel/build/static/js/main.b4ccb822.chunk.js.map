{"version":3,"sources":["actions/user.js","actions/task.js","services/httpService.js","components/Login.jsx","services/userServices.js","components/Calendar.jsx","services/taskServices.js","container/App.js","reportWebVitals.js","reducers/index.js","reducers/user.js","reducers/task.js","store/index.js","index.js"],"names":["setUser","user","dispatch","a","type","payload","setUserTasks","tasks","axios","defaults","headers","post","withCredentials","interceptors","response","use","error","status","toast","warning","position","closeOnClick","Promise","reject","get","put","delete","withRouter","props","useState","email","setemail","password","setpassword","setloading","useDispatch","handleSubmit","e","preventDefault","formData","http","config","apiBaseURL","JSON","stringify","data","console","log","history","push","alert","class","onSubmit","id","value","onChange","target","placeholder","aria-label","aria-describedby","statusText","userTasks","useSelector","state","task","taskTitle","settaskTitle","taskDescription","settaskDescription","showNewTask","setshowNewTask","selectedDate","setselectedDate","handleNewTaskForm","dateStr","window","location","reload","key","obj","title","start","status_text","className","onClick","name","plugins","dayGridPlugin","interactionPlugin","initialView","initialEvents","dateClick","arg","eventClick","App","path","exact","component","Login","Calendar","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","persistConfig","storage","persistedReducer","persistReducer","store","createStore","compose","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.b4ccb822.chunk.js","sourcesContent":["export const setUser = user => {\n    return async dispatch => {\n      await dispatch({type: 'SET_USER', payload: user});\n    };\n};\nexport const logoutUser = () => {\n    return async dispatch => {\n      await dispatch({type: 'LOGOUT_USER', payload: {}});\n    };\n};\n  ","export const setUserTasks = tasks => {\n    return async dispatch => {\n      await dispatch({type: 'SET_USER_TASKS', payload: tasks});\n    };\n};\n  ","import axios from 'axios';\nimport {toast} from 'react-toastify';\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\naxios.defaults.withCredentials = true;\naxios.interceptors.response.use(null,error => {\n    const expectedErrors = error.response && \n                            error.response.status >= 400 && \n                            error.response.status < 500;\n\n\n    if (!expectedErrors) {\n        toast.warning(\"مشکلی از سمت سرور پیش آمده است\",{position:'top-right',closeOnClick:true});\n    } else {\n      toast.warning(\"خطا در دریافت اطلاعات\",{position:'top-right',closeOnClick:true});\n    }\n\n    return Promise.reject(error);\n});\n\nexport default {\n    get : axios.get,\n    post : axios.post,\n    put : axios.put,\n    delete : axios.delete,\n};\n\n    \n\n\n","import React,{useState} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport {setUser} from './../actions/user.js';\nimport {setUserTasks} from './../actions/task.js';\nimport { loginUser } from '../services/userServices';\n\nconst Login = (props) => {\n    const [email, setemail] = useState('');\n    const [password, setpassword] = useState('');\n    const [loading, setloading] = useState(false);\n    const dispatch = useDispatch();\n    const handleSubmit = async (e)=>{\n        e.preventDefault();\n        if(email && password){\n            const formData = {\n                email,\n                password,\n            };\n            try {\n                setloading(true);\n                const { status, data } = await loginUser(formData);\n                console.log(data);\n                if (status === 200) {\n                    dispatch(setUser(data.data.user));\n                    dispatch(setUserTasks(data.data.user.tasks));\n                    setloading(false);\n                    props.history.push(\"/calendar\");\n                }\n            } catch (ex) {\n                setloading(false);\n            }\n        }else{\n            alert('Please fill in both email and password');\n        }\n       \n    }\n    return (\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-6 pt-5 mx-auto\">\n                    <h3 class=\"text-center mb-5\">Task Management</h3>\n                    <form onSubmit={handleSubmit}>\n                    <div class=\"row\">\n                        <div class=\"col-12\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\" id=\"basic-addon1\">@</span>\n                                </div>\n                                <input type=\"text\"  value={email} onChange={e=>setemail(e.target.value)} class=\"form-control\" placeholder=\"Email\" aria-label=\"Email\" aria-describedby=\"basic-addon1\" />\n                            </div>\n                        </div>\n                        <div class=\"col-12 mt-3\">\n                            <div class=\"input-group mb-3\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\" id=\"basic-addon1\">P</span>\n                                </div>\n                                <input type=\"password\" value={password} onChange={e=>setpassword(e.target.value)}  class=\"form-control\" placeholder=\"Password\" aria-label=\"Password\" aria-describedby=\"basic-addon1\" />\n                            </div>\n                        </div>\n                        <div class=\"col-12 mt-3\">\n                            <div class=\"input-group mb-3\">\n                                <button type=\"submit\" class=\"btn btn-success btn-block\" >Login</button>\n                            </div>\n                        </div>\n                    </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(Login);","import http from './httpService';\nimport config from './config.json';\n\nexport const loginUser = user => {\n    return http.post(`${config.apiBaseURL}/api/auth/login`,JSON.stringify(user));\n}","import React, { useEffect, useState } from 'react';\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport interactionPlugin from \"@fullcalendar/interaction\"\nimport { useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { logoutUser } from './../actions/user.js';\nimport { addTask } from '../services/taskServices.js';\nimport {setUserTasks} from './../actions/task.js';\n\n\nconst Calendar = (props) => {\n    const userTasks = useSelector(state => state.task);\n    const user = useSelector(state => state.user);\n    const [taskTitle, settaskTitle] = useState(null);\n    const [taskDescription, settaskDescription] = useState('');\n    const [showNewTask, setshowNewTask] = useState(false);\n    const [selectedDate, setselectedDate] = useState(null);\n\n    const dispatch = useDispatch();\n    let tasks = [];\n    const handleColor = (statusText) => {\n        if (statusText == 'accept') {\n            return '#0e9b01';\n        } else if (statusText == 'reject') {\n            return '#fb414a';\n        } else {\n            return '#f7c52e';\n        }\n    }\n\n   \n\n    const handleDateClick = (arg) => {\n        setshowNewTask(true);\n        setselectedDate(arg);\n    }\n\n    const handleEventClick = (arg) => {\n    }\n\n    const handleNewTaskForm = async (e) => {\n        e.preventDefault();\n        if(taskTitle){\n            let formData = {\n                'title':taskTitle,\n                'description':taskDescription,\n                'date':selectedDate.dateStr,\n            }\n            try {\n                const { status, data } = await addTask(formData);\n                if (status === 200) {\n                    dispatch(setUserTasks(data.data.tasks));\n                    window.location.reload();\n                }\n            } catch (ex) {\n            }\n        }else{\n            alert('Please fill task title');\n        }\n    }\n    if (userTasks) {\n        for( var key in userTasks){\n            var obj = userTasks[key];\n            tasks.push({\n                'id': obj.id,\n                'title': obj.title,\n                'start': obj.start,\n                'color': handleColor(obj.status_text)\n            })\n        }\n    } \n    const handleLogout = () => {\n        dispatch(logoutUser());\n        props.history.push(\"/\");\n    }\n    return (\n\n        user && user.email ? (\n            <div className=\"container\">\n                <div className=\"row mt-5\" >\n                    <div className=\"col-6\">\n                        <h4>Welcome : {user.email} </h4>\n                    </div>\n                    <div className=\"col-6 text-right\">\n                        <button className=\"btn btn-sm btn-danger\" onClick={handleLogout}> Logout</button>\n                    </div>\n                </div>\n                {showNewTask ? (\n                    <div className=\"row\">\n                        <div className=\"col-12 pt-5 pb-5\">\n                            <div className=\"card\">\n                                <div className=\"card-header\">New Task :  {selectedDate && selectedDate.dateStr}</div>\n                                <div className=\"card-body\">\n                                    <form onSubmit={handleNewTaskForm}>\n                                        <div class=\"input-group mb-3\">\n                                            <input type=\"text\" name=\"title\" value={taskTitle}  onChange={e=>settaskTitle(e.target.value)} className=\"form-control\"  placeholder=\"title\"/>\n                                        </div>\n                                        <div class=\"input-group mb-3\">\n                                            <input type=\"text\" name=\"description\"  value={taskDescription}  onChange={e=>settaskDescription(e.target.value)}  className=\"form-control\"  placeholder=\"description\"/>\n                                        </div>\n                                        <div class=\"input-group mb-3\">\n                                            <button type=\"submit\" className=\"btn btn-success btn-sm\">Submit</button>\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                ) : null}\n                <div className=\"row\">\n                    <div className=\"col-12 pt-5 pb-5\">\n                        <FullCalendar\n                            plugins={[dayGridPlugin, interactionPlugin]}\n                            initialView=\"dayGridMonth\"\n                            initialEvents={tasks} // alternatively, use the `events` setting to fetch from a feed\n                            dateClick={handleDateClick}\n                            eventClick={handleEventClick}\n                        />\n                    </div>\n                </div>\n            </div>\n        ) : null\n\n\n    );\n}\n\nexport default withRouter(Calendar);","import http from './httpService';\nimport config from './config.json';\n\nexport const addTask = task => {\n    return http.post(`${config.apiBaseURL}/api/task/add`,JSON.stringify(task));\n}\n\nexport const taskList = () => {\n    return http.get(`${config.apiBaseURL}/api/task/list`);\n}","import React from 'react';\nimport {BrowserRouter,Switch,Route} from 'react-router-dom';\nimport Login from '../components/Login';\nimport Calendar from '../components/Calendar';\n\nfunction App() {\n\n  return (\n      <BrowserRouter>\n        <Switch>\n            <Route path=\"/\" exact component={Login} />\n            <Route path=\"/calendar\" exact component={Calendar} />\n        </Switch>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers} from \"redux\";\nimport { userReducer } from \"./user\";\nimport { taskReducer } from \"./task\";\n\nexport const reducers = combineReducers({\n    user : userReducer,\n    task : taskReducer,\n});","export const userReducer = (state = {}, action) => {\n    switch (action.type) {\n        case 'SET_USER':\n            return {...action.payload};\n        case 'LOGOUT_USER':\n            return {...action.payload};\n        default:\n            return state;\n    }\n};\n  ","export const taskReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_USER_TASKS':\n            return {...action.payload};\n        default:\n            return state;\n    }\n};\n  ","import { applyMiddleware, compose, createStore } from \"redux\";\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\nimport {reducers} from './../reducers/index';\n\nimport thunk from \"redux-thunk\";\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n}\nconst persistedReducer = persistReducer(persistConfig, reducers);\nlet store = createStore(\n    persistedReducer,\n    compose(\n        applyMiddleware(thunk),\n       // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\nlet persistor = persistStore(store);\nexport default () => {\n    return { store, persistor }\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './container/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport storeAndPresistor from './store/index';\nimport { PersistGate } from 'redux-persist/integration/react'\n\n\nconst {store,persistor} = storeAndPresistor();\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n      <App/>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}