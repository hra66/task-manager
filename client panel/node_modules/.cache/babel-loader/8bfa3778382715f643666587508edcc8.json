{"ast":null,"code":"var _jsxFileName = \"/Users/hamid/dev/react/task/src/components/Calendar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { logoutUser } from './../actions/user.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calendar = props => {\n  _s();\n\n  const user = useSelector(state => state.user);\n  const [showNewTask, setshowNewTask] = useState(false);\n  const dispatch = useDispatch();\n  let tasks = [];\n\n  const handleColor = statusText => {\n    if (statusText == 'accept') {\n      return '#0e9b01';\n    } else if (statusText == 'reject') {\n      return '#fb414a';\n    } else {\n      return '#f7c52e';\n    }\n  };\n\n  if (user.tasks && user.tasks.length > 0) {\n    user.tasks.map(task => {\n      tasks.push({\n        'id': task.id,\n        'title': task.title,\n        'start': task.start,\n        'color': handleColor(task.status_text)\n      });\n    });\n  }\n\n  const handleDateClick = arg => {\n    setshowNewTask(true);\n  };\n\n  const handleEventClick = arg => {};\n\n  const handleLogout = () => {\n    dispatch(logoutUser());\n    props.history.push(\"/\");\n  };\n\n  return user && user.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Welcome : \", user.email, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6 text-right\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-sm btn-danger\",\n          onClick: handleLogout,\n          children: \" Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), showNewTask ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 pt-5 pb-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: \"New Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 pt-5 pb-5\",\n        children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n          plugins: [dayGridPlugin, interactionPlugin],\n          initialView: \"dayGridMonth\",\n          initialEvents: tasks // alternatively, use the `events` setting to fetch from a feed\n          ,\n          dateClick: handleDateClick,\n          eventClick: handleEventClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 13\n  }, this) : null;\n};\n\n_s(Calendar, \"flKEt2IkeDr24KRF5pbKw7KLKjQ=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Calendar;\nexport default _c2 = withRouter(Calendar);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Calendar\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/hamid/dev/react/task/src/components/Calendar.jsx"],"names":["React","useEffect","useState","FullCalendar","dayGridPlugin","interactionPlugin","useSelector","withRouter","useDispatch","logoutUser","Calendar","props","user","state","showNewTask","setshowNewTask","dispatch","tasks","handleColor","statusText","length","map","task","push","id","title","start","status_text","handleDateClick","arg","handleEventClick","handleLogout","history","email"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,sBAA3B;;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAMC,IAAI,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AACA,QAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAMc,QAAQ,GAAGR,WAAW,EAA5B;AACA,MAAIS,KAAK,GAAG,EAAZ;;AACA,QAAMC,WAAW,GAAIC,UAAD,IAAgB;AAChC,QAAIA,UAAU,IAAI,QAAlB,EAA4B;AACxB,aAAO,SAAP;AACH,KAFD,MAEO,IAAIA,UAAU,IAAI,QAAlB,EAA4B;AAC/B,aAAO,SAAP;AACH,KAFM,MAEA;AACH,aAAO,SAAP;AACH;AACJ,GARD;;AAUA,MAAIP,IAAI,CAACK,KAAL,IAAcL,IAAI,CAACK,KAAL,CAAWG,MAAX,GAAoB,CAAtC,EAAyC;AACrCR,IAAAA,IAAI,CAACK,KAAL,CAAWI,GAAX,CAAeC,IAAI,IAAI;AACnBL,MAAAA,KAAK,CAACM,IAAN,CAAW;AACP,cAAMD,IAAI,CAACE,EADJ;AAEP,iBAASF,IAAI,CAACG,KAFP;AAGP,iBAASH,IAAI,CAACI,KAHP;AAIP,iBAASR,WAAW,CAACI,IAAI,CAACK,WAAN;AAJb,OAAX;AAMH,KAPD;AAQH;;AAGD,QAAMC,eAAe,GAAIC,GAAD,IAAS;AAC7Bd,IAAAA,cAAc,CAAC,IAAD,CAAd;AACH,GAFD;;AAIA,QAAMe,gBAAgB,GAAID,GAAD,IAAS,CACjC,CADD;;AAGA,QAAME,YAAY,GAAG,MAAM;AACvBf,IAAAA,QAAQ,CAACP,UAAU,EAAX,CAAR;AACAE,IAAAA,KAAK,CAACqB,OAAN,CAAcT,IAAd,CAAmB,GAAnB;AACH,GAHD;;AAIA,SAEIX,IAAI,IAAIA,IAAI,CAACqB,KAAb,gBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACI;AAAA,mCAAerB,IAAI,CAACqB,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACI;AAAQ,UAAA,SAAS,EAAC,uBAAlB;AAA0C,UAAA,OAAO,EAAEF,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EASKjB,WAAW,gBACR;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADQ,GASR,IAlBR,eAmBI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BAEI,QAAC,YAAD;AACI,UAAA,OAAO,EAAE,CAACV,aAAD,EAAgBC,iBAAhB,CADb;AAEI,UAAA,WAAW,EAAC,cAFhB;AAGI,UAAA,aAAa,EAAEY,KAHnB,CAG0B;AAH1B;AAII,UAAA,SAAS,EAAEW,eAJf;AAKI,UAAA,UAAU,EAAEE;AALhB;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,GAkCI,IApCR;AAwCH,CA/ED;;GAAMpB,Q;UACWJ,W,EAGIE,W;;;KAJfE,Q;AAiFN,qBAAeH,UAAU,CAACG,QAAD,CAAzB","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport interactionPlugin from \"@fullcalendar/interaction\"\nimport { useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { logoutUser } from './../actions/user.js';\n\n\nconst Calendar = (props) => {\n    const user = useSelector(state => state.user);\n    const [showNewTask, setshowNewTask] = useState(false);\n\n    const dispatch = useDispatch();\n    let tasks = [];\n    const handleColor = (statusText) => {\n        if (statusText == 'accept') {\n            return '#0e9b01';\n        } else if (statusText == 'reject') {\n            return '#fb414a';\n        } else {\n            return '#f7c52e';\n        }\n    }\n\n    if (user.tasks && user.tasks.length > 0) {\n        user.tasks.map(task => {\n            tasks.push({\n                'id': task.id,\n                'title': task.title,\n                'start': task.start,\n                'color': handleColor(task.status_text)\n            })\n        })\n    }\n\n\n    const handleDateClick = (arg) => {\n        setshowNewTask(true);\n    }\n\n    const handleEventClick = (arg) => {\n    }\n\n    const handleLogout = () => {\n        dispatch(logoutUser());\n        props.history.push(\"/\");\n    }\n    return (\n\n        user && user.email ? (\n            <div className=\"container\">\n                <div className=\"row mt-5\" >\n                    <div className=\"col-6\">\n                        <h4>Welcome : {user.email} </h4>\n                    </div>\n                    <div className=\"col-6 text-right\">\n                        <button className=\"btn btn-sm btn-danger\" onClick={handleLogout}> Logout</button>\n                    </div>\n                </div>\n                {showNewTask ? (\n                    <div className=\"row\">\n                        <div className=\"col-12 pt-5 pb-5\">\n                            <div className=\"card\">\n                                <div className=\"card-header\">New Task</div>\n                                <div className=\"card-body\"></div>\n                            </div>\n                        </div>\n                    </div>\n                ) : null}\n                <div className=\"row\">\n                    <div className=\"col-12 pt-5 pb-5\">\n                        \n                        <FullCalendar\n                            plugins={[dayGridPlugin, interactionPlugin]}\n                            initialView=\"dayGridMonth\"\n                            initialEvents={tasks} // alternatively, use the `events` setting to fetch from a feed\n                            dateClick={handleDateClick}\n                            eventClick={handleEventClick}\n                        />\n\n                    </div>\n                </div>\n            </div>\n        ) : null\n\n\n    );\n}\n\nexport default withRouter(Calendar);"]},"metadata":{},"sourceType":"module"}