{"ast":null,"code":"import _regeneratorRuntime from\"/Users/hamid/dev/react/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/hamid/dev/react/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/hamid/dev/react/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import FullCalendar from'@fullcalendar/react';import dayGridPlugin from'@fullcalendar/daygrid';import interactionPlugin from\"@fullcalendar/interaction\";import{useSelector}from'react-redux';import{withRouter}from'react-router-dom';import{useDispatch}from'react-redux';import{logoutUser}from'./../actions/user.js';import{addTask}from'../services/taskServices.js';import{setUserTasks}from'./../actions/task.js';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var Calendar=function Calendar(props){var userTasks=useSelector(function(state){return state.task;});var user=useSelector(function(state){return state.user;});var _useState=useState(null),_useState2=_slicedToArray(_useState,2),taskTitle=_useState2[0],settaskTitle=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),taskDescription=_useState4[0],settaskDescription=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showNewTask=_useState6[0],setshowNewTask=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),selectedDate=_useState8[0],setselectedDate=_useState8[1];var dispatch=useDispatch();var tasks=[];var handleColor=function handleColor(statusText){if(statusText=='accept'){return'#0e9b01';}else if(statusText=='reject'){return'#fb414a';}else{return'#f7c52e';}};if(userTasks&&userTasks.length>0){userTasks.map(function(task){tasks.push({'id':task.id,'title':task.title,'start':task.start,'color':handleColor(task.status_text)});});}var handleDateClick=function handleDateClick(arg){setshowNewTask(true);setselectedDate(arg);};var handleEventClick=function handleEventClick(arg){};var handleNewTaskForm=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var formData,_yield$addTask,status,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();if(!taskTitle){_context.next=16;break;}formData={'title':taskTitle,'description':taskDescription,'date':selectedDate.dateStr};_context.prev=3;_context.next=6;return addTask(formData);case 6:_yield$addTask=_context.sent;status=_yield$addTask.status;data=_yield$addTask.data;if(status===200){dispatch(setUserTasks(data.data.tasks));}_context.next=14;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](3);case 14:_context.next=17;break;case 16:alert('Please fill task title');case 17:case\"end\":return _context.stop();}}},_callee,null,[[3,12]]);}));return function handleNewTaskForm(_x){return _ref.apply(this,arguments);};}();var handleLogout=function handleLogout(){dispatch(logoutUser());props.history.push(\"/\");};return user&&user.email?/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row mt-5\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-6\",children:/*#__PURE__*/_jsxs(\"h4\",{children:[\"Welcome : \",user.email,\" \"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-6 text-right\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-sm btn-danger\",onClick:handleLogout,children:\" Logout\"})})]}),showNewTask?/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-12 pt-5 pb-5\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[\"New Task :  \",selectedDate&&selectedDate.dateStr]}),/*#__PURE__*/_jsx(\"div\",{className:\"card-body\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleNewTaskForm,children:[/*#__PURE__*/_jsx(\"div\",{class:\"input-group mb-3\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"title\",value:taskTitle,onChange:function onChange(e){return settaskTitle(e.target.value);},className:\"form-control\",placeholder:\"title\"})}),/*#__PURE__*/_jsx(\"div\",{class:\"input-group mb-3\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"description\",value:taskDescription,onChange:function onChange(e){return settaskDescription(e.target.value);},className:\"form-control\",placeholder:\"description\"})}),/*#__PURE__*/_jsx(\"div\",{class:\"input-group mb-3\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-success btn-sm\",children:\"Submit\"})})]})})]})})}):null,/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-12 pt-5 pb-5\",children:/*#__PURE__*/_jsx(FullCalendar,{plugins:[dayGridPlugin,interactionPlugin],initialView:\"dayGridMonth\",initialEvents:tasks// alternatively, use the `events` setting to fetch from a feed\n,dateClick:handleDateClick,eventClick:handleEventClick})})})]}):null;};export default withRouter(Calendar);","map":{"version":3,"sources":["/Users/hamid/dev/react/task/src/components/Calendar.jsx"],"names":["React","useEffect","useState","FullCalendar","dayGridPlugin","interactionPlugin","useSelector","withRouter","useDispatch","logoutUser","addTask","setUserTasks","Calendar","props","userTasks","state","task","user","taskTitle","settaskTitle","taskDescription","settaskDescription","showNewTask","setshowNewTask","selectedDate","setselectedDate","dispatch","tasks","handleColor","statusText","length","map","push","id","title","start","status_text","handleDateClick","arg","handleEventClick","handleNewTaskForm","e","preventDefault","formData","dateStr","status","data","alert","handleLogout","history","email","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport interactionPlugin from \"@fullcalendar/interaction\"\nimport { useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { logoutUser } from './../actions/user.js';\nimport { addTask } from '../services/taskServices.js';\nimport {setUserTasks} from './../actions/task.js';\n\n\nconst Calendar = (props) => {\n    const userTasks = useSelector(state => state.task);\n    const user = useSelector(state => state.user);\n    const [taskTitle, settaskTitle] = useState(null);\n    const [taskDescription, settaskDescription] = useState('');\n    const [showNewTask, setshowNewTask] = useState(false);\n    const [selectedDate, setselectedDate] = useState(null);\n\n    const dispatch = useDispatch();\n    let tasks = [];\n    const handleColor = (statusText) => {\n        if (statusText == 'accept') {\n            return '#0e9b01';\n        } else if (statusText == 'reject') {\n            return '#fb414a';\n        } else {\n            return '#f7c52e';\n        }\n    }\n\n    if (userTasks && userTasks.length > 0) {\n        userTasks.map(task => {\n            tasks.push({\n                'id': task.id,\n                'title': task.title,\n                'start': task.start,\n                'color': handleColor(task.status_text)\n            })\n        })\n    }\n\n\n    const handleDateClick = (arg) => {\n        setshowNewTask(true);\n        setselectedDate(arg);\n    }\n\n    const handleEventClick = (arg) => {\n    }\n\n    const handleNewTaskForm = async (e) => {\n        e.preventDefault();\n        if(taskTitle){\n            let formData = {\n                'title':taskTitle,\n                'description':taskDescription,\n                'date':selectedDate.dateStr,\n            }\n            try {\n                const { status, data } = await addTask(formData);\n                if (status === 200) {\n                    dispatch(setUserTasks(data.data.tasks));\n                }\n            } catch (ex) {\n            }\n        }else{\n            alert('Please fill task title');\n        }\n    }\n\n    const handleLogout = () => {\n        dispatch(logoutUser());\n        props.history.push(\"/\");\n    }\n    return (\n\n        user && user.email ? (\n            <div className=\"container\">\n                <div className=\"row mt-5\" >\n                    <div className=\"col-6\">\n                        <h4>Welcome : {user.email} </h4>\n                    </div>\n                    <div className=\"col-6 text-right\">\n                        <button className=\"btn btn-sm btn-danger\" onClick={handleLogout}> Logout</button>\n                    </div>\n                </div>\n                {showNewTask ? (\n                    <div className=\"row\">\n                        <div className=\"col-12 pt-5 pb-5\">\n                            <div className=\"card\">\n                                <div className=\"card-header\">New Task :  {selectedDate && selectedDate.dateStr}</div>\n                                <div className=\"card-body\">\n                                    <form onSubmit={handleNewTaskForm}>\n                                        <div class=\"input-group mb-3\">\n                                            <input type=\"text\" name=\"title\" value={taskTitle}  onChange={e=>settaskTitle(e.target.value)} className=\"form-control\"  placeholder=\"title\"/>\n                                        </div>\n                                        <div class=\"input-group mb-3\">\n                                            <input type=\"text\" name=\"description\"  value={taskDescription}  onChange={e=>settaskDescription(e.target.value)}  className=\"form-control\"  placeholder=\"description\"/>\n                                        </div>\n                                        <div class=\"input-group mb-3\">\n                                            <button type=\"submit\" className=\"btn btn-success btn-sm\">Submit</button>\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                ) : null}\n                <div className=\"row\">\n                    <div className=\"col-12 pt-5 pb-5\">\n                        \n                        <FullCalendar\n                            plugins={[dayGridPlugin, interactionPlugin]}\n                            initialView=\"dayGridMonth\"\n                            initialEvents={tasks} // alternatively, use the `events` setting to fetch from a feed\n                            dateClick={handleDateClick}\n                            eventClick={handleEventClick}\n                        />\n\n                    </div>\n                </div>\n            </div>\n        ) : null\n\n\n    );\n}\n\nexport default withRouter(Calendar);"]},"metadata":{},"sourceType":"module"}