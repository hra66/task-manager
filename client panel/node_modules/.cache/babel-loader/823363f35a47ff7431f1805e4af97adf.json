{"ast":null,"code":"var _jsxFileName = \"/Users/hamid/dev/react/task/src/components/Calendar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { logoutUser } from './../actions/user.js';\nimport { addTask } from '../services/taskServices.js';\nimport { setUserTasks } from '../actions/task.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calendar = props => {\n  _s();\n\n  const user = useSelector(state => state.user);\n  const [taskTitle, settaskTitle] = useState(null);\n  const [taskDescription, settaskDescription] = useState(null);\n  const [showNewTask, setshowNewTask] = useState(false);\n  const [selectedDate, setselectedDate] = useState(null);\n  const dispatch = useDispatch();\n  let tasks = [];\n\n  const handleColor = statusText => {\n    if (statusText == 'accept') {\n      return '#0e9b01';\n    } else if (statusText == 'reject') {\n      return '#fb414a';\n    } else {\n      return '#f7c52e';\n    }\n  };\n\n  if (user.tasks && user.tasks.length > 0) {\n    user.tasks.map(task => {\n      tasks.push({\n        'id': task.id,\n        'title': task.title,\n        'start': task.start,\n        'color': handleColor(task.status_text)\n      });\n    });\n  }\n\n  const handleDateClick = arg => {\n    setshowNewTask(true);\n    setselectedDate(arg);\n  };\n\n  const handleEventClick = arg => {};\n\n  const handleNewTaskForm = async e => {\n    e.preventDefault();\n\n    if (taskTitle) {\n      let formData = {\n        'title': taskTitle,\n        'description': taskDescription,\n        'date': selectedDate.dateStr\n      };\n\n      try {\n        const {\n          status,\n          data\n        } = await addTask(formData);\n        console.log(data); // if (status === 200) {\n        //     dispatch(setUserTasks(data.data.user));\n        // }\n      } catch (ex) {}\n    } else {\n      alert('Please fill task title');\n    }\n  };\n\n  const handleLogout = () => {\n    dispatch(logoutUser());\n    props.history.push(\"/\");\n  };\n\n  return user && user.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Welcome : \", user.email, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6 text-right\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-sm btn-danger\",\n          onClick: handleLogout,\n          children: \" Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this), showNewTask ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 pt-5 pb-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: [\"New Task :  \", selectedDate && selectedDate.dateStr]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleNewTaskForm,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"input-group mb-3\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"title\",\n                  value: taskTitle,\n                  onChange: e => settaskTitle(e.target.value),\n                  className: \"form-control\",\n                  placeholder: \"title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"input-group mb-3\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"description\",\n                  value: taskDescription,\n                  onChange: e => settaskDescription(e.target.value),\n                  className: \"form-control\",\n                  placeholder: \"description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"input-group mb-3\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-success btn-sm\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 pt-5 pb-5\",\n        children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n          plugins: [dayGridPlugin, interactionPlugin],\n          initialView: \"dayGridMonth\",\n          initialEvents: tasks // alternatively, use the `events` setting to fetch from a feed\n          ,\n          dateClick: handleDateClick,\n          eventClick: handleEventClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 13\n  }, this) : null;\n};\n\n_s(Calendar, \"8K62+LA149rIL45PBGFEFLZAp6k=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Calendar;\nexport default _c2 = withRouter(Calendar);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Calendar\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/hamid/dev/react/task/src/components/Calendar.jsx"],"names":["React","useEffect","useState","FullCalendar","dayGridPlugin","interactionPlugin","useSelector","withRouter","useDispatch","logoutUser","addTask","setUserTasks","Calendar","props","user","state","taskTitle","settaskTitle","taskDescription","settaskDescription","showNewTask","setshowNewTask","selectedDate","setselectedDate","dispatch","tasks","handleColor","statusText","length","map","task","push","id","title","start","status_text","handleDateClick","arg","handleEventClick","handleNewTaskForm","e","preventDefault","formData","dateStr","status","data","console","log","ex","alert","handleLogout","history","email","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport interactionPlugin from \"@fullcalendar/interaction\"\nimport { useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { logoutUser } from './../actions/user.js';\nimport { addTask } from '../services/taskServices.js';\nimport { setUserTasks } from '../actions/task.js';\n\n\nconst Calendar = (props) => {\n    const user = useSelector(state => state.user);\n    const [taskTitle, settaskTitle] = useState(null);\n    const [taskDescription, settaskDescription] = useState(null);\n    const [showNewTask, setshowNewTask] = useState(false);\n    const [selectedDate, setselectedDate] = useState(null);\n\n    const dispatch = useDispatch();\n    let tasks = [];\n    const handleColor = (statusText) => {\n        if (statusText == 'accept') {\n            return '#0e9b01';\n        } else if (statusText == 'reject') {\n            return '#fb414a';\n        } else {\n            return '#f7c52e';\n        }\n    }\n\n    if (user.tasks && user.tasks.length > 0) {\n        user.tasks.map(task => {\n            tasks.push({\n                'id': task.id,\n                'title': task.title,\n                'start': task.start,\n                'color': handleColor(task.status_text)\n            })\n        })\n    }\n\n\n    const handleDateClick = (arg) => {\n        setshowNewTask(true);\n        setselectedDate(arg);\n    }\n\n    const handleEventClick = (arg) => {\n    }\n\n    const handleNewTaskForm = async (e) => {\n        e.preventDefault();\n        if(taskTitle){\n            let formData = {\n                'title':taskTitle,\n                'description':taskDescription,\n                'date':selectedDate.dateStr,\n            }\n            try {\n                const { status, data } = await addTask(formData);\n                console.log(data);\n                // if (status === 200) {\n                //     dispatch(setUserTasks(data.data.user));\n                // }\n            } catch (ex) {\n            }\n        }else{\n            alert('Please fill task title');\n        }\n    }\n\n    const handleLogout = () => {\n        dispatch(logoutUser());\n        props.history.push(\"/\");\n    }\n    return (\n\n        user && user.email ? (\n            <div className=\"container\">\n                <div className=\"row mt-5\" >\n                    <div className=\"col-6\">\n                        <h4>Welcome : {user.email} </h4>\n                    </div>\n                    <div className=\"col-6 text-right\">\n                        <button className=\"btn btn-sm btn-danger\" onClick={handleLogout}> Logout</button>\n                    </div>\n                </div>\n                {showNewTask ? (\n                    <div className=\"row\">\n                        <div className=\"col-12 pt-5 pb-5\">\n                            <div className=\"card\">\n                                <div className=\"card-header\">New Task :  {selectedDate && selectedDate.dateStr}</div>\n                                <div className=\"card-body\">\n                                    <form onSubmit={handleNewTaskForm}>\n                                        <div class=\"input-group mb-3\">\n                                            <input type=\"text\" name=\"title\" value={taskTitle}  onChange={e=>settaskTitle(e.target.value)} className=\"form-control\"  placeholder=\"title\"/>\n                                        </div>\n                                        <div class=\"input-group mb-3\">\n                                            <input type=\"text\" name=\"description\"  value={taskDescription}  onChange={e=>settaskDescription(e.target.value)}  className=\"form-control\"  placeholder=\"description\"/>\n                                        </div>\n                                        <div class=\"input-group mb-3\">\n                                            <button type=\"submit\" className=\"btn btn-success btn-sm\">Submit</button>\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                ) : null}\n                <div className=\"row\">\n                    <div className=\"col-12 pt-5 pb-5\">\n                        \n                        <FullCalendar\n                            plugins={[dayGridPlugin, interactionPlugin]}\n                            initialView=\"dayGridMonth\"\n                            initialEvents={tasks} // alternatively, use the `events` setting to fetch from a feed\n                            dateClick={handleDateClick}\n                            eventClick={handleEventClick}\n                        />\n\n                    </div>\n                </div>\n            </div>\n        ) : null\n\n\n    );\n}\n\nexport default withRouter(Calendar);"]},"metadata":{},"sourceType":"module"}